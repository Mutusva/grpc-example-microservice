// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: b_proto.proto

package b_protopb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamA int64 `protobuf:"varint,2,opt,name=param_a,json=paramA,proto3" json:"param_a,omitempty"`
}

func (x *BRequest) Reset() {
	*x = BRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_b_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BRequest) ProtoMessage() {}

func (x *BRequest) ProtoReflect() protoreflect.Message {
	mi := &file_b_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BRequest.ProtoReflect.Descriptor instead.
func (*BRequest) Descriptor() ([]byte, []int) {
	return file_b_proto_proto_rawDescGZIP(), []int{0}
}

func (x *BRequest) GetParamA() int64 {
	if x != nil {
		return x.ParamA
	}
	return 0
}

type BResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResA string `protobuf:"bytes,1,opt,name=res_a,json=resA,proto3" json:"res_a,omitempty"`
	ResB int64  `protobuf:"varint,2,opt,name=res_b,json=resB,proto3" json:"res_b,omitempty"`
}

func (x *BResponse) Reset() {
	*x = BResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_b_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BResponse) ProtoMessage() {}

func (x *BResponse) ProtoReflect() protoreflect.Message {
	mi := &file_b_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BResponse.ProtoReflect.Descriptor instead.
func (*BResponse) Descriptor() ([]byte, []int) {
	return file_b_proto_proto_rawDescGZIP(), []int{1}
}

func (x *BResponse) GetResA() string {
	if x != nil {
		return x.ResA
	}
	return ""
}

func (x *BResponse) GetResB() int64 {
	if x != nil {
		return x.ResB
	}
	return 0
}

var File_b_proto_proto protoreflect.FileDescriptor

var file_b_proto_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x09, 0x62, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x41, 0x22, 0x36,
	0x0a, 0x0a, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x41, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x5f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x65, 0x73, 0x42, 0x32, 0x42, 0x0a, 0x0d, 0x42, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x47, 0x65, 0x74, 0x42, 0x12,
	0x12, 0x2e, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f,
	0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_b_proto_proto_rawDescOnce sync.Once
	file_b_proto_proto_rawDescData = file_b_proto_proto_rawDesc
)

func file_b_proto_proto_rawDescGZIP() []byte {
	file_b_proto_proto_rawDescOnce.Do(func() {
		file_b_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_b_proto_proto_rawDescData)
	})
	return file_b_proto_proto_rawDescData
}

var file_b_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_b_proto_proto_goTypes = []interface{}{
	(*BRequest)(nil),  // 0: b_proto.b_request
	(*BResponse)(nil), // 1: b_proto.b_response
}
var file_b_proto_proto_depIdxs = []int32{
	0, // 0: b_proto.BMicroservice.GetB:input_type -> b_proto.b_request
	1, // 1: b_proto.BMicroservice.GetB:output_type -> b_proto.b_response
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_b_proto_proto_init() }
func file_b_proto_proto_init() {
	if File_b_proto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_b_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_b_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_b_proto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_b_proto_proto_goTypes,
		DependencyIndexes: file_b_proto_proto_depIdxs,
		MessageInfos:      file_b_proto_proto_msgTypes,
	}.Build()
	File_b_proto_proto = out.File
	file_b_proto_proto_rawDesc = nil
	file_b_proto_proto_goTypes = nil
	file_b_proto_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BMicroserviceClient is the client API for BMicroservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BMicroserviceClient interface {
	GetB(ctx context.Context, in *BRequest, opts ...grpc.CallOption) (*BResponse, error)
}

type bMicroserviceClient struct {
	cc grpc.ClientConnInterface
}

func NewBMicroserviceClient(cc grpc.ClientConnInterface) BMicroserviceClient {
	return &bMicroserviceClient{cc}
}

func (c *bMicroserviceClient) GetB(ctx context.Context, in *BRequest, opts ...grpc.CallOption) (*BResponse, error) {
	out := new(BResponse)
	err := c.cc.Invoke(ctx, "/b_proto.BMicroservice/GetB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BMicroserviceServer is the server API for BMicroservice service.
type BMicroserviceServer interface {
	GetB(context.Context, *BRequest) (*BResponse, error)
}

// UnimplementedBMicroserviceServer can be embedded to have forward compatible implementations.
type UnimplementedBMicroserviceServer struct {
}

func (*UnimplementedBMicroserviceServer) GetB(context.Context, *BRequest) (*BResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetB not implemented")
}

func RegisterBMicroserviceServer(s *grpc.Server, srv BMicroserviceServer) {
	s.RegisterService(&_BMicroservice_serviceDesc, srv)
}

func _BMicroservice_GetB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BMicroserviceServer).GetB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/b_proto.BMicroservice/GetB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BMicroserviceServer).GetB(ctx, req.(*BRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BMicroservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "b_proto.BMicroservice",
	HandlerType: (*BMicroserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetB",
			Handler:    _BMicroservice_GetB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "b_proto.proto",
}
